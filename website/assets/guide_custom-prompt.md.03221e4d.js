import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.6a4c7ee0.js";const d=JSON.parse('{"title":"定制提示类型","description":"","frontmatter":{},"headers":[],"relativePath":"guide/custom-prompt.md","filePath":"guide/custom-prompt.md"}'),p={name:"guide/custom-prompt.md"},o=l(`<h1 id="定制提示类型" tabindex="-1">定制提示类型 <a class="header-anchor" href="#定制提示类型" aria-label="Permalink to &quot;定制提示类型&quot;">​</a></h1><p>除了为命令选项自动推断交互提示类型外，也可以手动指定提示类型。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">FlexCommand</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;flexcli&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{import(&#39;flexcli&#39;).FlexCli}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">cli</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">cli</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;">{    </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">restartCommand</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FlexCommand</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    restartCommand</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;restart&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">prompt</span><span style="color:#E1E4E8;">([</span></span>
<span class="line"><span style="color:#E1E4E8;">            {</span></span>
<span class="line"><span style="color:#E1E4E8;">                name: </span><span style="color:#9ECBFF;">&quot;force&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                type: </span><span style="color:#9ECBFF;">&quot;confirm&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                message: </span><span style="color:#9ECBFF;">&quot;是否强制重启？&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                default: </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">        ])</span></span>
<span class="line"><span style="color:#E1E4E8;"> }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">FlexCommand</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;flexcli&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{import(&#39;flexcli&#39;).FlexCli}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">cli</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">cli</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;">{    </span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">restartCommand</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FlexCommand</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    restartCommand</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;restart&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">prompt</span><span style="color:#24292E;">([</span></span>
<span class="line"><span style="color:#24292E;">            {</span></span>
<span class="line"><span style="color:#24292E;">                name: </span><span style="color:#032F62;">&quot;force&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                type: </span><span style="color:#032F62;">&quot;confirm&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                message: </span><span style="color:#032F62;">&quot;是否强制重启？&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                default: </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        ])</span></span>
<span class="line"><span style="color:#24292E;"> }</span></span></code></pre></div><ul><li><code>prompt</code>方法添加自定义的<code>prompt</code>，每个选项都是一个对象<code>PromptObject</code>，对象的属性请参阅<a href="https://github.com/terkelg/prompts" target="_blank" rel="noreferrer">prompts</a></li></ul>`,4),e=[o];function t(c,r,E,y,i,m){return n(),a("div",null,e)}const u=s(p,[["render",t]]);export{d as __pageData,u as default};
