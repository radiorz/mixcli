import{_ as s,o as n,c as a,Q as o}from"./chunks/framework.6a4c7ee0.js";const u=JSON.parse('{"title":"创建命令","description":"","frontmatter":{},"headers":[],"relativePath":"guide/create-command.md","filePath":"guide/create-command.md"}'),l={name:"guide/create-command.md"},p=o(`<h1 id="创建命令" tabindex="-1">创建命令 <a class="header-anchor" href="#创建命令" aria-label="Permalink to &quot;创建命令&quot;">​</a></h1><p><code>FlexCli</code>基于<code>commander</code>，因此可以使用<code>commander</code>的所有功能，在<code>commander</code>的基础上作了增强，提供了更加友好的命令行开发体验。</p><h2 id="编写命令" tabindex="-1">编写命令 <a class="header-anchor" href="#编写命令" aria-label="Permalink to &quot;编写命令&quot;">​</a></h2><p>每一个<code>FlexCli</code>命令原则上建议一个命令对应一个<code>js</code>文件,且该<code>js</code>文件导出一个返回<code>FlexCommand</code>或<code>FlexCommand[]</code>的函数，如下所示：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> {</span><span style="color:#79B8FF;">FlexCommand</span><span style="color:#E1E4E8;">} </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;flexcli&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{import(&#39;flexcli&#39;).FlexCli}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">cli</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">cli</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">devCommand</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FlexCommand</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    devCommand</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;dev&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">arguments</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;&lt;name&gt;&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;项目名称&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">option</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;-p,--port &lt;port&gt;&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;指定端口号&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3000</span><span style="color:#E1E4E8;">)                      </span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">option</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;-d,--debug&quot;</span><span style="color:#E1E4E8;"> ,</span><span style="color:#9ECBFF;">&quot;调试模式&quot;</span><span style="color:#E1E4E8;">,{ default:</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,prompt:</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> })      </span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">option</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;-h,--host &lt;host&gt;&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;指定主机名&quot;</span><span style="color:#E1E4E8;">,{default:</span><span style="color:#9ECBFF;">&quot;localhost&quot;</span><span style="color:#E1E4E8;">,prompt:</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">})                         </span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">action</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">async</span><span style="color:#E1E4E8;"> (name,options){</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 此处是命令的具体实现</span></span>
<span class="line"><span style="color:#E1E4E8;">        })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 返回要创建的命令</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> devCommand;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> {</span><span style="color:#005CC5;">FlexCommand</span><span style="color:#24292E;">} </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;flexcli&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{import(&#39;flexcli&#39;).FlexCli}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">cli</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">cli</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">devCommand</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FlexCommand</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    devCommand</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;dev&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">arguments</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;&lt;name&gt;&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;项目名称&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">option</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;-p,--port &lt;port&gt;&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;指定端口号&quot;</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3000</span><span style="color:#24292E;">)                      </span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">option</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;-d,--debug&quot;</span><span style="color:#24292E;"> ,</span><span style="color:#032F62;">&quot;调试模式&quot;</span><span style="color:#24292E;">,{ default:</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,prompt:</span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> })      </span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">option</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;-h,--host &lt;host&gt;&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;指定主机名&quot;</span><span style="color:#24292E;">,{default:</span><span style="color:#032F62;">&quot;localhost&quot;</span><span style="color:#24292E;">,prompt:</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">})                         </span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">action</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">async</span><span style="color:#24292E;"> (name,options){</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 此处是命令的具体实现</span></span>
<span class="line"><span style="color:#24292E;">        })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 返回要创建的命令</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> devCommand;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><ul><li><strong>注意:</strong> <code>FlexCommand</code>继承自<code>commander.Command</code>，因此可以使用<code>commander</code>的所有功能,<code>FlexCommand.option</code>用来声明命令选项，其参数与<code>commander.Command.option</code>基本一致，并做了少量扩展。</li></ul><h2 id="命令选项" tabindex="-1">命令选项 <a class="header-anchor" href="#命令选项" aria-label="Permalink to &quot;命令选项&quot;">​</a></h2><p><code>FlexCommand</code>继承自<code>commander.Command</code>，声明命令选项的方式与<code>commander</code>一致。</p><p>为命令增加选项的方法，在<code>commander</code>中提供了两种方式：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">program </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 无choices </span></span>
<span class="line"><span style="color:#E1E4E8;">    .</span><span style="color:#B392F0;">option</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;-d, --drink &lt;size&gt;&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;drink size&#39;</span><span style="color:#E1E4E8;">)    </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 需要使用choices时     </span></span>
<span class="line"><span style="color:#E1E4E8;">    .</span><span style="color:#B392F0;">addOption</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Option</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;-d, --drink &lt;size&gt;&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;drink size&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">choices</span><span style="color:#E1E4E8;">([</span><span style="color:#9ECBFF;">&#39;small&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;medium&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;large&#39;</span><span style="color:#E1E4E8;">]))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">program </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 无choices </span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">option</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;-d, --drink &lt;size&gt;&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;drink size&#39;</span><span style="color:#24292E;">)    </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 需要使用choices时     </span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">addOption</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Option</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;-d, --drink &lt;size&gt;&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;drink size&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">choices</span><span style="color:#24292E;">([</span><span style="color:#032F62;">&#39;small&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;medium&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;large&#39;</span><span style="color:#24292E;">]))</span></span></code></pre></div><p>以上两种方式同样支持，详见<a href="https://github.com/tj/commander.js" target="_blank" rel="noreferrer">commander</a>介绍。</p><p>而在<code>FlexCli</code>中，可以简化为直接这样定义：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">FlexCommand</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;flexcli&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">devCommand</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FlexCommand</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    devCommand.</span><span style="color:#B392F0;">option</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;-m,--mode &lt;mode&gt;&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;指定模式&quot;</span><span style="color:#E1E4E8;">,{choices:[</span><span style="color:#9ECBFF;">&quot;development&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;production&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;test&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;debug&quot;</span><span style="color:#E1E4E8;">]})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">FlexCommand</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;flexcli&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">devCommand</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FlexCommand</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    devCommand.</span><span style="color:#6F42C1;">option</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;-m,--mode &lt;mode&gt;&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;指定模式&quot;</span><span style="color:#24292E;">,{choices:[</span><span style="color:#032F62;">&quot;development&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;production&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;test&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;debug&quot;</span><span style="color:#24292E;">]})</span></span></code></pre></div><p><code>FlexCommand</code>继承自<code>commander.Command</code>，因此可以使用<code>commander</code>的所有功能,<code>FlexCommand.option</code>用来声明命令选项，其参数与<code>commander.Command.option</code>一致，但是<code>FlexCommand.option</code>提供了更加友好的方式来定义命令选项。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FlexCommand</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Command</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">option</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">flags</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">description</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">,</span><span style="color:#FFAB70;">defaultValue</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;">any</span><span style="color:#E1E4E8;"> )</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">option</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">flags</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">description</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">,</span><span style="color:#FFAB70;">options</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;">FlexOptionParams</span><span style="color:#E1E4E8;"> )</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FlexCommand</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Command</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">option</span><span style="color:#24292E;">(</span><span style="color:#E36209;">flags</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">, </span><span style="color:#E36209;">description</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">undefined</span><span style="color:#24292E;">,</span><span style="color:#E36209;">defaultValue</span><span style="color:#D73A49;">?:</span><span style="color:#005CC5;">any</span><span style="color:#24292E;"> )</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">option</span><span style="color:#24292E;">(</span><span style="color:#E36209;">flags</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">, </span><span style="color:#E36209;">description</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">undefined</span><span style="color:#24292E;">,</span><span style="color:#E36209;">options</span><span style="color:#D73A49;">?:</span><span style="color:#6F42C1;">FlexOptionParams</span><span style="color:#24292E;"> )</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><code>FlexOptionParams</code>定义如下：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FlexOptionParams</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">IPromptableOptions</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">required</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;">;                         </span><span style="color:#6A737D;">// A value must be supplied when the option is specified.</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">optional</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;">;                         </span><span style="color:#6A737D;">// A value is optional when the option is specified.</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">default</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;">PromptParamDefaultValue</span><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 默认值</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">choices</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">[]                           </span><span style="color:#6A737D;">// 选项值的可选值</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">prompt</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;">InputPromptParam</span><span style="color:#E1E4E8;">                    </span><span style="color:#6A737D;">// 交互提示信息配置</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">validate</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">value</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">any</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">defaultDescription</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">          </span><span style="color:#6A737D;">// 默认值的描述    </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">conflicts</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">[]</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">env</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;">string</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">argParser</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">T</span><span style="color:#E1E4E8;">&gt;(</span><span style="color:#FFAB70;">value</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">previous</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">T</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">T</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">hideHelp</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;">boolean</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">mandatory</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">implies</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;">{[</span><span style="color:#FFAB70;">key</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">any</span><span style="color:#E1E4E8;">}  </span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FlexOptionParams</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">IPromptableOptions</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">required</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;">;                         </span><span style="color:#6A737D;">// A value must be supplied when the option is specified.</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">optional</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;">;                         </span><span style="color:#6A737D;">// A value is optional when the option is specified.</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">default</span><span style="color:#D73A49;">?:</span><span style="color:#6F42C1;">PromptParamDefaultValue</span><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 默认值</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">choices</span><span style="color:#D73A49;">?:</span><span style="color:#005CC5;">string</span><span style="color:#24292E;">[]                           </span><span style="color:#6A737D;">// 选项值的可选值</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">prompt</span><span style="color:#D73A49;">?:</span><span style="color:#6F42C1;">InputPromptParam</span><span style="color:#24292E;">                    </span><span style="color:#6A737D;">// 交互提示信息配置</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">validate</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;">(</span><span style="color:#E36209;">value</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">any</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">defaultDescription</span><span style="color:#D73A49;">?:</span><span style="color:#005CC5;">string</span><span style="color:#24292E;">          </span><span style="color:#6A737D;">// 默认值的描述    </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">conflicts</span><span style="color:#D73A49;">?:</span><span style="color:#005CC5;">string</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">[]</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">env</span><span style="color:#D73A49;">?:</span><span style="color:#005CC5;">string</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">argParser</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">T</span><span style="color:#24292E;">&gt;(</span><span style="color:#E36209;">value</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">, </span><span style="color:#E36209;">previous</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">T</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">T</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">hideHelp</span><span style="color:#D73A49;">?:</span><span style="color:#005CC5;">boolean</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">mandatory</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">implies</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;">{[</span><span style="color:#E36209;">key</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">string</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">any</span><span style="color:#24292E;">}  </span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><strong><code>FlexCommand</code>的增强体现在：</strong></p><ul><li>增加了参数<code>prompt</code>，用来<strong>控制命令选项使用哪一种交互提示信息。</strong></li><li>重载了<code>Command</code>的<code>option</code>方法，通过<code>FlexOptionParams</code>参数来声明所有命令选项的配置参数。</li></ul><h2 id="扩展命令" tabindex="-1">扩展命令 <a class="header-anchor" href="#扩展命令" aria-label="Permalink to &quot;扩展命令&quot;">​</a></h2><p>在开发命令行应用，除了可以新增加命令外，还可以扩展已有的命令，比如：</p><h3 id="修改命令选项" tabindex="-1">修改命令选项 <a class="header-anchor" href="#修改命令选项" aria-label="Permalink to &quot;修改命令选项&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> {</span><span style="color:#79B8FF;">FlexCommand</span><span style="color:#E1E4E8;">} </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;flexcli&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">cli</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;">{    </span></span>
<span class="line"><span style="color:#E1E4E8;">    cli.</span><span style="color:#B392F0;">find</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;dev&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">devCommand</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;">{   </span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 获取到当前命令的选项</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">option</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> devCommand.options.</span><span style="color:#B392F0;">find</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">option</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;">option.</span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;mode&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 修改命令选项</span></span>
<span class="line"><span style="color:#E1E4E8;">        option.required </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        option.choices </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&quot;development&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;production&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;test&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;debug&quot;</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">    }) </span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> {</span><span style="color:#005CC5;">FlexCommand</span><span style="color:#24292E;">} </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;flexcli&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">cli</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;">{    </span></span>
<span class="line"><span style="color:#24292E;">    cli.</span><span style="color:#6F42C1;">find</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;dev&quot;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">then</span><span style="color:#24292E;">((</span><span style="color:#E36209;">devCommand</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;">{   </span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 获取到当前命令的选项</span></span>
<span class="line highlighted"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">option</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> devCommand.options.</span><span style="color:#6F42C1;">find</span><span style="color:#24292E;">((</span><span style="color:#E36209;">option</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;">option.</span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;mode&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 修改命令选项</span></span>
<span class="line"><span style="color:#24292E;">        option.required </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        option.choices </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&quot;development&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;production&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;test&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;debug&quot;</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">    }) </span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="增加命令选项" tabindex="-1">增加命令选项 <a class="header-anchor" href="#增加命令选项" aria-label="Permalink to &quot;增加命令选项&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> {</span><span style="color:#79B8FF;">FlexCommand</span><span style="color:#E1E4E8;">} </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;flexcli&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">cli</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;">{    </span></span>
<span class="line"><span style="color:#E1E4E8;">    cli.</span><span style="color:#B392F0;">find</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;dev&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">devCommand</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;">{   </span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">       devCommand.</span><span style="color:#B392F0;">option</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;-p,--port &lt;port&gt;&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;指定端口号&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3000</span><span style="color:#E1E4E8;">)         </span></span>
<span class="line"><span style="color:#E1E4E8;">    }) </span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> {</span><span style="color:#005CC5;">FlexCommand</span><span style="color:#24292E;">} </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;flexcli&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">cli</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;">{    </span></span>
<span class="line"><span style="color:#24292E;">    cli.</span><span style="color:#6F42C1;">find</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;dev&quot;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">then</span><span style="color:#24292E;">((</span><span style="color:#E36209;">devCommand</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;">{   </span></span>
<span class="line highlighted"><span style="color:#24292E;">       devCommand.</span><span style="color:#6F42C1;">option</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;-p,--port &lt;port&gt;&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;指定端口号&quot;</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3000</span><span style="color:#24292E;">)         </span></span>
<span class="line"><span style="color:#24292E;">    }) </span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="增加子命令" tabindex="-1">增加子命令 <a class="header-anchor" href="#增加子命令" aria-label="Permalink to &quot;增加子命令&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> {</span><span style="color:#79B8FF;">FlexCommand</span><span style="color:#E1E4E8;">} </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;flexcli&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">cli</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;">{    </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 1. 获取已经存在的命令</span></span>
<span class="line"><span style="color:#E1E4E8;">    cli.</span><span style="color:#B392F0;">find</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;dev&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">devCommand</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;">{ </span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">appCommand</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FlexCommand</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        appCommand</span></span>
<span class="line"><span style="color:#E1E4E8;">            .</span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;app&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">            .</span><span style="color:#B392F0;">arguments</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;&lt;name&gt;&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;项目名称&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">            .</span><span style="color:#B392F0;">option</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;-p,--port &lt;port&gt;&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;指定端口号&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3000</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">            .</span><span style="color:#B392F0;">action</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;">,</span><span style="color:#FFAB70;">options</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#6A737D;">// 此处是命令的具体实现</span></span>
<span class="line"><span style="color:#E1E4E8;">            })        </span></span>
<span class="line"><span style="color:#E1E4E8;">        devCommand.</span><span style="color:#B392F0;">addCommand</span><span style="color:#E1E4E8;">(appCommand);</span></span>
<span class="line"><span style="color:#E1E4E8;">    })</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> {</span><span style="color:#005CC5;">FlexCommand</span><span style="color:#24292E;">} </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;flexcli&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">cli</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;">{    </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 1. 获取已经存在的命令</span></span>
<span class="line"><span style="color:#24292E;">    cli.</span><span style="color:#6F42C1;">find</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;dev&quot;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">then</span><span style="color:#24292E;">((</span><span style="color:#E36209;">devCommand</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;">{ </span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">appCommand</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FlexCommand</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        appCommand</span></span>
<span class="line"><span style="color:#24292E;">            .</span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;app&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">            .</span><span style="color:#6F42C1;">arguments</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;&lt;name&gt;&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;项目名称&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">            .</span><span style="color:#6F42C1;">option</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;-p,--port &lt;port&gt;&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;指定端口号&quot;</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3000</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">            .</span><span style="color:#6F42C1;">action</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">name</span><span style="color:#24292E;">,</span><span style="color:#E36209;">options</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">// 此处是命令的具体实现</span></span>
<span class="line"><span style="color:#24292E;">            })        </span></span>
<span class="line"><span style="color:#24292E;">        devCommand.</span><span style="color:#6F42C1;">addCommand</span><span style="color:#24292E;">(appCommand);</span></span>
<span class="line"><span style="color:#24292E;">    })</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="获取命令" tabindex="-1">获取命令 <a class="header-anchor" href="#获取命令" aria-label="Permalink to &quot;获取命令&quot;">​</a></h2><p>在进行命令扩展时，需要获取已经存在的命令，<code>FlexCli</code>提供了两种方式来获取命令：</p><ul><li><code>FlexCli.find(命令名称)</code>：以异步的方式来获取命令。</li><li><code>FlexCli.get(命令名称)</code>：以同步命令名称来获取命令，如果命令不存在，则抛出<code>undefined</code>。</li></ul><h3 id="命令名称" tabindex="-1">命令名称 <a class="header-anchor" href="#命令名称" aria-label="Permalink to &quot;命令名称&quot;">​</a></h3><p><code>FlexCli.find(命令名称)</code>或<code>FlexCli.get(命令名称)</code>中的命令名称支持获取到子命令。</p><p>比如，有如下命令：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> {</span><span style="color:#79B8FF;">FlexCommand</span><span style="color:#E1E4E8;">} </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;flexcli&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">cli</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;">{    </span></span>
<span class="line"><span style="color:#E1E4E8;">    cli.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;dev&quot;</span><span style="color:#E1E4E8;">)      </span><span style="color:#6A737D;">// 获取dev命令对象</span></span>
<span class="line"><span style="color:#E1E4E8;">    cli.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;dev.app&quot;</span><span style="color:#E1E4E8;">)  </span><span style="color:#6A737D;">// 获取dev命令的子命令app对象</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> {</span><span style="color:#005CC5;">FlexCommand</span><span style="color:#24292E;">} </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;flexcli&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">cli</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;">{    </span></span>
<span class="line"><span style="color:#24292E;">    cli.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;dev&quot;</span><span style="color:#24292E;">)      </span><span style="color:#6A737D;">// 获取dev命令对象</span></span>
<span class="line"><span style="color:#24292E;">    cli.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;dev.app&quot;</span><span style="color:#24292E;">)  </span><span style="color:#6A737D;">// 获取dev命令的子命令app对象</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><code>find</code>和<code>get</code>方法的区别在于：</p><ul><li><code>find</code>是异步方法，返回一个<code>Promise</code>,而<code>get</code>是同步方法</li><li>当<code>FlexCli</code>在检索<code>include</code>参数指定的扩展包并加裁时，由于扩展包加载顺序的问题，<code>get</code>方法获取命令时要求命令必须是已经前置加载的。而<code>find</code>方法则不受此限制。所以大部份情况下，建议采用<code>find</code>方法来获取命令。</li></ul>`,36),e=[p];function t(c,r,E,y,i,F){return n(),a("div",null,e)}const C=s(l,[["render",t]]);export{u as __pageData,C as default};
